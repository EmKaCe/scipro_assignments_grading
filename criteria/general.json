{
   "followingInstructions":{
      "title":"Following Instructions",
      "additionalNotes":true,
      "negative":[
         {
            "mainPoint":"The instructions were not followed, which includes",
            "subPoints":[
               "imports - using the following disallowed libraries:",
               "format - solution was not a Jupyter-notebook",
               "name - not included at the top of the solution"
            ]
         }
      ]
   },
   "academicScholarship":{
      "title":"Academic Scholarship (Citations and Writing)",
      "additionalNotes":true,
      "positive":[
         {
            "mainPoint":"Scholarship done well, which includes",
            "subPoints":[
               "citing - source of information and knowledge",
               "citing - libraries",
               "citing - proper ordering (e.g., ...[1-2]...[3] and not ...[3-4]...[1]...)",
               "references - consistent formatting",
               "references - complete information provided",
               "units - input and output numbers have units (e.g. N, kJ, m/s, Hz)"
            ]
         },
         {
            "mainPoint":"Writing and communication done well, which includes",
            "subPoints":[
               "sentences - clean, concise and clear (C^3)",
               "sentences - complete written when appropriate (e.g., within Markdown cells, docstrings, f-string)"
            ]
         }
      ],
      "neutral":[
         {
            "mainPoint":"Scholarship done okay, but with a few occurrences in the following",
            "subPoints":[
               "citing - websites should include the date visited",
               "citing - when possible cite peer-reviewed papers or academic books, not websites",
               "references - inconsistent formatting"
            ]
         },
         {
            "mainPoint":"Writing and communication done okay, but with a few occurrences in the following",
            "subPoints":[
               "markdown -- formatting needs improvement",
               "sentences - incomplete (e.g., capitalization, punctuation, etc.)",
               "sentences - unclear",
               "words - misspelled",
               "words - mixed English and German"
            ]
         }
      ],
      "negative":[
         {
            "mainPoint":"No citation of information sources",
            "subPoints":[
               "As a university student, you should be citing sources of knowledge. This is something that you will need to do for your thesis."
            ]
         },
         {
            "mainPoint":"Scholarship done poorly, which includes the following",
            "subPoints":[
               "citing - done out-of-order (e.g., the first citation in your text is not to reference 1)",
               "citing - missing references for knowledge (e.g., datasets, equations, libraries)",
               "citing - missing reference numbers (e.g. [1, 2]) within your writing",
               "references - missing important information (e.g., year, author, journal, title, accessed date)",
               "units - were not provided when needed"
            ]
         },
         {
            "mainPoint":"Writing and communication done poorly, which includes the following",
            "subPoints":[
               "communication - create your own context description within (e.g., do not copy it from the assignment)",
               "communication - no or very little presentation of thoughts or ideas (e.g., context, solution meaning, decisions made)",
               "context - poorly provided (e.g., background info, the problem)",
               "image - an image from the assignment is not good enough, suggesting a lack of effort",
               "sentences - not clean, concise and/or clear (C^3)",
               "sentences - incomplete sentences (e.g., capitalization, punctuation, subject, verb) when appropriate (including in f-strings) ",
               "words - several misspelled",
               "words - several mixed English and German words"
            ]
         }
      ]
   },
   "jupyterNotebooks":{
      "title":"Jupyter Notebooks",
      "additionalNotes":true,
      "positive":[
         {
            "mainPoint":"Notebook is done well, which includes the following",
            "subPoints":[
               "cell structure - good usage to separate ideas (e.g., thoughts, tasks/subtasks, user-defined functions)",
               "cell structure - logical ordering and mixture of markdown and code cells",
               "code cells - good separation of encode ideas",
               "markdown cells - good usage to communicate ideas, thoughts or workflow"
            ]
         }
      ],
      "neutral":[
         {
            "mainPoint":"Notebook could be slightly improved, which includes the following",
            "subPoints":[
               "cell structure - some additional separation of ideas (both code and markdown cells)",
               "code cells - some additional encoded ideas into separate cells would have been logical",
               "markdown cells - some additional communication would have been more informative"
            ]
         }
      ],
      "negative":[
         {
            "mainPoint":"Notebook was poorly done,  which includes the following",
            "subPoints":[
               "cell structure - significant work is needed to better separate the tasks, subtasks, or thoughts/ideas",
               "cell structure -  providing your solution in one code cell is not ideal, and does not make good use of a Jupyter-notebook's capability",
               "code cells - more separation of encoded ideas was required",
               "markdown cells - a significant lack of good, informative communication is seen in your solution",
               "markdown cells - not used"
            ]
         }
      ]
   },
   "codeFormatting":{
      "title":"Code Formatting",
      "additionalNotes":true,
      "positive":[
         {
            "mainPoint":"Formatting done well, which includes",
            "subPoints":[
               "blank lines - consistent and good usage",
               "block commenting - appropriate amount (i.e., comments given on their own code line)",
               "docstring commenting - appropriate amount (i.e. comments withing triple quotes)",
               "f-string - properly used",
               "imports - libraries were alphabetized",
               "imports - libraries were listed at the notebook's top",
               "indentation - consistent and with 4 spaces",
               "inline commenting - appropriate amount (i.e., comments given at the end of a code line)",
               "line length - properly done (e.g., no scrolling is needed)",
               "naming - descriptive objects/variables (i.e., human readable)",
               "PEP8 guidelines- followed",
               "spacing - consistent and correct usage",
               "writing - clean, concise and clearly written code"
            ]
         }
      ],
      "negative":[
         {
            "mainPoint":"The following formatting issues were present in your code",
            "subPoints":[
               "blank lines - not enough used (e.g., separating ideas and improving readability)",
               "blank lines - too many used (i.e., not concise)",
               "block commenting - inappropriately done and/or unnecessary (i.e., comments given on their own code line)",
               "commenting - excessive amounts done (e.g., for obvious points), or not relevant (i.e. significantly distracts from the solution's main focus)",
               "docstrings - inappropriately done (e.g., use a markdown cell)",
               "imports - not alphabetized",
               "imports - not listed together at the notebook's top",
               "imports - libraries were imported, but not used",
               "indentation - improperly done (i.e., 4 spaces)",
               "inline commenting - usage was unnecessary (i.e., comments given at the end of a code line)",
               "f-string - not used",
               "f-string - please ensure that proper grammar and syntax are maintained in the print statements",
               "line length - too long (i.e., requiring scrolling)",
               "naming - object/variable is not descriptive (i.e., human readable)",
               "naming - object/variable is too long (i.e., not concise while remaining informative)",
               "spacing - inconsistent and/or improperly used",
               "PEP8 - not well followed"
            ]
         }
      ]
   },
   "codingConcept":{
      "title":"Coding Concept",
      "additionalNotes":true,
      "positive":[
         {
            "mainPoint":"Data structures done well, which includes the following",
            "subPoints":[
               "dictionary - e.g., my_dictionary = {key_1: value_1, key_2: value_2}",
               "set - e.g., my_set = {item_1, item_2, item_3}",
               "tuple - e.g., my_tuple = (item_1, item_2, item_3)",
               "list - e.g., my_list = [item_1, item_2, item_3]"
            ]
         },
         {
            "mainPoint":"Coding concepts done well, which includes the following ",
            "subPoints":[
               "concise coding  - reduced redundancy (i.e., repetition)",
               "list comprehension",
               "looping - over a dictionary",
               "looping - 'zip' usage to iterate over two lists",
               "built-in function - 'enumerate'",
               "built-in function - 'reversed'",
               "built-in function - 'range'",
               "built-in function - 'sorted'"
            ]
         }
      ],
      "neutral":[
         {
            "mainPoint":"Data structures could improve the solution slightly, which includes the following",
            "subPoints":[
               "dictionary - 'key:value' combination",
               "set - unique elements",
               "tuple - immutable elements"
            ]
         },
         {
            "mainPoint":"Coding concepts that could improve the solution slightly, which includes the following",
            "subPoints":[
               "list comprehension - replacing simple 'if-elif-else' statements (i.e., to improve readability)"
            ]
         }
      ],
      "negative":[
         {
            "mainPoint":"Data structures done poorly done, which includes the following",
            "subPoints":[
               "making your coding more concise, which reduces redundancy (i.e., repetition) and the chances of introducing errors",
               "dictionary - 'key:value' combination",
               "set - unique elements",
               "tuple - immutable elements",
               "zip - built-in function to loop over two lists of equal length"
            ]
         },
         {
            "mainPoint":"Coding concepts that were poorly done, which includes the following",
            "subPoints":[
               "if-elif-else - it is better to use 'if-elif-else' statements, rather than 'if-if-...' due to readability and speed",
               "copy-and-pasting - doing this increases the chances of errors and may introduced confusion"
            ]
         }
      ]
   },
   "userDefinedFunctions":{
      "title":"User-defined Functions",
      "additionalNotes":true,
      "positive":[
         {
            "mainPoint":"Good use of the following",
            "subPoints":[
               "including type hinting",
               "providing context via docstrings",
               "stating what the function does",
               "stating what the input objects are (i.e. they are defined)",
               "stating what the function returns",
               "proving internal checks using 'if not isinstance' and a 'raise' statement",
               "setting an optional variable to a default value of 'None'",
               "isolating concepts well to user-defined functions (i.e. improving reusability, transferability and debugging)"
            ]
         }
      ],
      "neutral":[
         {
            "mainPoint":"The use of 'assert' over 'raise' statements",
            "subPoints":[
               "It is better to use a 'raise' statement since 'assert' statements can be bypassed. Note that for development work, the use of 'assert' is okay."
            ]
         },
         {
            "mainPoint":"Too complex of a user-defined functions employed",
            "subPoints":[
               "While it is good to have created a user-defined functions, the function itself does too much. It is better to isolate concepts into different functions, and to make the functions as general-purpose as possible."
            ]
         }
      ],
      "negative":[
         {
            "mainPoint":"No user-defined functions employed",
            "subPoints":[
               "Your solution did not include user-defined functions. Defining your own function helps to isolate concepts, improves reusability, transferability and debugging. These are a major part of scientific programming."
            ]
         },
         {
            "mainPoint":"Your user-defined functions is trivial",
            "subPoints":[
               "Your user-defined function does very little, and arguably does not warrant being a function."
            ]
         },
        {
            "mainPoint":"Your user-defined functions is not general",
            "subPoints":[
               "Your user-defined function is very specific to this assignment. A more generalized one could have been created, and thus could be transferred to another problem."
            ]
         },
         {
            "mainPoint":"Your user-defined functions had the following problems",
            "subPoints":[
               "docstring - none provided ",
               "docstring - no statement about what the function does",
               "docstring - no statement about the input variables",
               "docstring - no statement about what the function returns",
               "internal checks - none (e.g., 'if not isinstance')",
               "main code - the main portion of the function should be nested under the 'else' statement of the internal checking",
               "optional parameters - not setting to a default value of 'None'",
               "type hinting - there is none",
               "type hinting - incorrect types"
            ]
         }
      ]
   },
   "callingFunction":{
      "title":"Function Calling",
      "additionalNotes":true,
      "negative":[
         {
            "mainPoint":"",
            "subPoints":[
               "Include the parameter that is being passed an object. For example, 'my_function(param1=a, param2=b)' and not 'my_function(a, b)'. Doing so ensure that the values are passed to the correct parameter."
            ]
         }
      ]
   },
   "general":{
      "title":"General Feedback",
      "additionalNotes":true,
      "positive":[
         {
            "mainPoint":"",
            "subPoints":[
               "Excellent job on this assignment!",
               "Very good job on this assignment!",
               "Good job on this assignment."
            ]
         }
      ],
      "neutral":[
         {
            "mainPoint":"",
            "subPoints":[
               "overall solution - while generally okay, there is still significant room for improvement",
               "name - please provide your name in a markdown cell at the notebook's top"
            ]
         }
      ],
      "negative":[
         {
            "mainPoint":"",
            "subPoints":[
               "execution - code does not run because of the following problem(s):"
            ]
         }
      ]
   }
}
