{"codequality-grading":"5","codeexecution-grading":"5.5","scientific-grading":"4","creativity-grading":"3","followingInstructions-negative-You did not follow the assignment's instructions, which includes-not putting your name at the top of the assignment":"checked","academicScholarship-neutral-Generally good citing of information, but with a few issues that include-being careful when citing websites - when possible cite peer-reviewed papers or academic books":"checked","academicScholarship-negative-Poorly citing information, which includes the following-not citing Python3 libraries that were used:":"checked","jupyterNotebooks-positive-Overall Notebook Structure-Good use of cells structure to separate ideas (e.g. thoughts, tasks/subtasks, user-defined functions).":"checked","codeFormatting-positive-Very good code formatting that includes-all libraries used were alphabetized":"checked","codeFormatting-positive-Very good code formatting that includes-proper f-string statements":"checked","codeFormatting-negative-The following formatting issues were present in your code-too many blank lines were used":"checked","codeFormatting-negative-The following formatting issues were present in your code-inconsistent or poor indentation (i.e. 4 spaces)":"checked","codingConcept-positive-Good use of data structures that includes-lists (e.g. my_list = [item_1, item_2, item_3])":"checked","userDefinedFunctions-positive-Good use of the following-including type hinting":"checked","userDefinedFunctions-positive-Good use of the following-stating what the function does":"checked","userDefinedFunctions-positive-Good use of the following-stating what the input objects are (i.e. they are defined)":"checked","userDefinedFunctions-neutral-The use of 'assert' over 'raise' statements-It is better to use a 'raise' statement since 'assert' statements can be bypassed. Note that for development work, the use of 'assert' is okay.":"checked","userDefinedFunctions-negative-Your user-defined functions had the following problems-a lack of type hinting":"checked","general-positive--Excellent job on this assignment!":"checked","significantFigures-positive--Your numbers are reported with the correct significant figures.":"checked","plotting-positive-Overall plot feedback-The choices behind the plot creation were well done, resulting in clear and informative data presentation.":"checked","plotting-neutral-Overall plot feedback-The choices behind the plot creation were generally good, but there is some room for improvement.":"checked","plotting-negative-The choice in the following plot elements could have been done better-axis labels":"checked","numpy-positive-The following points were well done-good job on using ndarrays for your Numpy-based function":"checked","SciPy-negative--You needed to use SciPy's optimize function to find the optimal value of the variable.":"checked","SciPy - Mountains-neutral-Pandas-Should have dropped duplicate data values and any rows that had missing data.":"checked","SciPy - Mountains-negative-RMSE-A user-defined RMSE function was an obvious to create here.":"checked","academicScholarship-negative-Poorly citing information, which includes the following-not citing Python3 libraries that were used:-textarea":"Numpy","academicScholarship-textarea":"You need to improve your academic scholarship.","plotting-textarea":"Nice plots overall.","evaluation-textbox":" General Feedback \n\n\nFollowing Instructions:\n\nNegative:\n•  You did not follow the assignment's instructions, which includes:\n      - not putting your name at the top of the assignment\n\n\nAcademic Scholarship (Citations and Writing):\n\nNeutral:\n•  Generally good citing of information, but with a few issues that include:\n      - being careful when citing websites - when possible cite peer-reviewed papers or academic books\n\nNegative:\n•  Poorly citing information, which includes the following:\n      - not citing Python3 libraries that were used:\n          Numpy\n\nAdditional Notes: \n  You need to improve your academic scholarship.\n\n\nJupyter Notebooks:\n\nPositive:\n•  Overall Notebook Structure:\n      - Good use of cells structure to separate ideas (e.g. thoughts, tasks/subtasks, user-defined functions).\n\n\nCode Formatting:\n\nPositive:\n•  Very good code formatting that includes:\n      - all libraries used were alphabetized\n      - proper f-string statements\n\nNegative:\n•  The following formatting issues were present in your code:\n      - too many blank lines were used\n      - inconsistent or poor indentation (i.e. 4 spaces)\n\n\nCoding Concept:\n\nPositive:\n•  Good use of data structures that includes:\n      - lists (e.g. my_list = [item_1, item_2, item_3])\n\n\nUser-defined Functions:\n\nPositive:\n•  Good use of the following:\n      - including type hinting\n      - stating what the function does\n      - stating what the input objects are (i.e. they are defined)\n\nNeutral:\n•  The use of 'assert' over 'raise' statements:\n      - It is better to use a 'raise' statement since 'assert' statements can be bypassed. Note that for development work, the use of 'assert' is okay.\n\nNegative:\n•  Your user-defined functions had the following problems:\n      - a lack of type hinting\n\n\nGeneral Feedback:\n\nPositive:\n      - Excellent job on this assignment!\n\n\n Assignment Specific Feedback \n\n\nSignificant Figures:\n\nPositive:\n      - Your numbers are reported with the correct significant figures.\n\n\nPlotting (Pandas or Matplotlib):\n\nPositive:\n•  Overall plot feedback:\n      - The choices behind the plot creation were well done, resulting in clear and informative data presentation.\n\nNeutral:\n•  Overall plot feedback:\n      - The choices behind the plot creation were generally good, but there is some room for improvement.\n\nNegative:\n•  The choice in the following plot elements could have been done better:\n      - axis labels\n\nAdditional Notes: \n  Nice plots overall.\n\n\nNumpy Library:\n\nPositive:\n•  The following points were well done:\n      - good job on using ndarrays for your Numpy-based function\n\n\nSciPy Library:\n\nNegative:\n      - You needed to use SciPy's optimize function to find the optimal value of the variable.\n\n\nSciPy - Mountains:\n\nNeutral:\n•  Pandas:\n      - Should have dropped duplicate data values and any rows that had missing data.\n\nNegative:\n•  RMSE:\n      - A user-defined RMSE function was an obvious to create here.\n"}